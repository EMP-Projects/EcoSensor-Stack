
services:
  ecosensor-db:
    container_name: ecosensor-db
    image: postgis/postgis:16-3.4
    env_file: .env.aws
    environment:
      PGPORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: "PGPASSWORD=${POSTGRES_PASS} pg_isready -h 127.0.0.1 -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p 5432"
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 1m
    restart: always
    networks:
      - ecosensor-network
    volumes:
      - ./ecosensor/db:/var/lib/postgresql

  ecosensor-osm:
    container_name: ecosensor-osm
    env_file: .env.aws
    image: ghcr.io/emp-projects/docker-osm2pgsq:main
    depends_on:
      ecosensor-db:
        condition: service_healthy
    restart: always
    environment:
      PGHOST: ecosensor-db
      PGDB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      PGPWD: ${POSTGRES_PASS}
      PGPORT: 5432
    volumes:
      - ./osm/osm:/osm
    networks:
      - ecosensor-network
  
  ecosensor-openmeteo-api:
    image: ghcr.io/open-meteo/open-meteo
    container_name: ecosensor-openmeteo-api
    env_file: .env.aws
    ports:
      - ${OPEN_METEO_PORT}:8080
    command: serve
    volumes:
      - ./openmeteo:/app/data
    restart: always
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}

  ecosensor-openmeteo-sync:
    image: ghcr.io/open-meteo/open-meteo
    container_name: ecosensor-openmeteo-sync
    env_file: .env.aws
    command: sync ${OPEN_METEO_MODELS} ${OPEN_METEO_VARIABLES} --past-days ${OPEN_METEO_MAX_AGE_DAYS} --repeat-interval ${OPEN_METEO_REPEAT_INTERVAL} --concurrent ${OPEN_METEO_CONCURRENT}
    volumes:
      - ./openmeteo/sync:/app/data
    restart: always
    networks:
      - ecosensor-network
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
        
  ecosensor-istat:
    container_name: ecosensor-istat
    image: ghcr.io/emp-projects/docker-istat:main
    env_file: .env.aws
    depends_on:
      ecosensor-db:
        condition: service_healthy
    environment:
        PGPORT: 5432
        PGHOST: ecosensor-db
        PGDB: ${POSTGRES_DB}
        PGUSER: ${POSTGRES_USER}
        PGPWD: ${POSTGRES_PASS}
    networks:
        - ecosensor-network

networks:
  ecosensor-network:
    name: ecosensor
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.1.0/24

volumes:
  db:
    driver: local
